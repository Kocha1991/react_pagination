{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","total","perPage","countPage","currentPage","onPageChange","onDeac","onInc","console","log","_jsxs","_Fragment","children","className","_jsx","type","onClick","Array","fill","map","page","index","concat","slice","Number","item","items","from","to","numbers","n","push","getNumbers","options","App","_useState","useState","_useState2","_slicedToArray","setPerPage","_useState3","_useState4","setCurrentPage","Math","ceil","length","fromItem","toItem","id","value","onChange","target","htmlFor","pageNumber","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.009f97d1.chunk.js","sourcesContent":["import React from 'react';\n/* eslint-disable */\ninterface Props {\n  total: string[],\n  perPage: string,\n  countPage: number,\n  currentPage: number,\n  onPageChange: (pageNumber: number) => void,\n  onDeac: () => void,\n  onInc: () => void\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  countPage,\n  currentPage,\n  onPageChange,\n  onDeac,\n  onInc\n}) => {\n  console.log(onDeac);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className=\"page-item\">\n          <button\n            type=\"button\"\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            aria-disabled=\"true\"\n            onClick={onDeac}\n          >\n            «\n          </button>\n          \n        </li>\n        {Array(countPage).fill('page').map((page, index) => (\n          <li\n            key={page + index}\n            className={`page-item ${currentPage === index && 'active'}`}\n          >\n            <button\n              type=\"button\"\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              onClick={() => onPageChange(index)}\n            >\n              {index + 1}\n            </button>\n          </li>\n        ))}\n\n        <li className=\"page-item\">\n          <button\n            type='button'\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            aria-disabled=\"false\"\n            onClick={onInc}\n          >\n            »\n          </button>\n        </li>\n      </ul>\n      <ul>\n        {total.slice((Number(perPage) * currentPage), (Number(perPage) * (currentPage + 1))).map((item: string) => (\n          <li key={item} data-cy={item}>{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const options = ['3', '5', '10', '20'];\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState<string>(options[1]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const countPage = Math.ceil(items.length / Number(perPage));\n  const fromItem = Number(perPage) * currentPage + 1;\n  const toItem = fromItem + Number(perPage) - 1;\n\n  const handleChangCountItem = (\n    { target }: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setPerPage(target.value);\n\n    if (currentPage) {\n      setCurrentPage(0);\n    }\n  };\n\n  const handleDeacr = () => currentPage && setCurrentPage(\n    prev => prev - 1,\n  );\n\n  const handleIncr = () => currentPage + 1 < countPage && setCurrentPage(\n    prev => prev + 1,\n  );\n\n  const handlePageChange = (pageNumber: number) => setCurrentPage(pageNumber);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage + 1} (items ${fromItem} - ${toItem > items.length ? items.length : toItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChangCountItem}\n          >\n            {options.map(item => (\n              <option key={item} value={item}>{item}</option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={items}\n        perPage={perPage}\n        countPage={countPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n        onDeac={handleDeacr}\n        onInc={handleIncr}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}